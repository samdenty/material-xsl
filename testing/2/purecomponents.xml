<?xml-stylesheet type="text/xsl" href="purecomponents.xsl" ?>
<html>
  <body>
    <Grid>
      <Row>
        <Group>About MaterialXSL</Group>
        <Demo>
          <About />
        </Demo>
      </Row>
      <Row>
        <Group>Headers</Group>
        <Demo>
          <Heading size="large">Large</Heading>
          <Heading size="medium">Medium</Heading>
          <Heading size="small">Small</Heading>
        </Demo>
      </Row>
      <Row>
        <Group>Button types</Group>
        <Demo>
          <Button color="default">Default</Button>
          <Button color="primary">Primary</Button>
          <Button color="secondary">Secondary</Button>
          <Button color="secondary" disabled="">Disabled</Button>
        </Demo>
      </Row>
      <Row>
        <Group>Button colors</Group>
        <Demo>
          <Button color="default" variant="raised">Default</Button>
          <Button color="primary" variant="raised">Primary</Button>
          <Button color="secondary" variant="raised">Secondary</Button>
          <Button color="secondary" variant="raised" disabled="">Disabled</Button>
        </Demo>
      </Row>
      <Row>
        <Group>Button sizes</Group>
        <Demo>
          <Button color="primary" variant="raised" size="small">Small</Button>
          <Button color="primary" variant="raised" size="medium">Medium</Button>
          <Button color="primary" variant="raised" size="large">Large</Button>
        </Demo>
      </Row>
    </Grid>
  </body>

  <components>
    <Grid>
      <children />
    </Grid>

    <Group>
      <h4>
        <children />
      </h4>
    </Group>

    <Heading>
      <h1>
        <children /> Heading!
      </h1>
    </Heading>

    <Button>
      <children />
    </Button>

    <About>
      MaterialXSL allows you to write modular HTML which is parsed client side (without the need for Javascript enabled).

      It can pre-process HTML using XSL, based around the concepts of Components.
    </About>
  </components>

  <style>
    * {
      font-family: 'Roboto', sans-serif;
    }
    Grid {
      display: grid;
      grid-gap: 20px;
    }
    Group h4 {
      font-size: 1.2em;
      font-weight: 500;
      padding-bottom: 15px;
      border-bottom: 1px solid rgba(0, 0, 0, 0.1)
    }
    Row {
      display: flex;
      flex-direction: column;
      padding: 10px 20px;
      background-color: rgba(0,0,0,0.1);
    }

    About {
      white-space: pre
    }

    Heading{display:block;font-family:Roboto,sans-serif;font-size:2em;margin:.5em 0}Heading[size^=medium]{font-size:1.5em}Heading[size^=small]{font-size:1em}Heading h1{font-size:inherit;font-weight:initial}

    Button,Button:not([variant^=raised]){color:rgba(0,0,0,.87)}Button{background:none;position:relative;display:inline-block;padding:8px 16px;min-width:88px;font-size:.875rem;box-sizing:border-box;min-height:36px;transition:background-color 250ms cubic-bezier(.4,0,.2,1) 0s,box-shadow 250ms cubic-bezier(.4,0,.2,1) 0s;line-height:1.4em;text-align:center;font-family:Roboto,Helvetica,Arial,sans-serif;font-weight:500;border-radius:2px;text-transform:uppercase;border:0;cursor:pointer;outline:0;margin:5px;user-select:none}Button[size^=small]{padding:7px 8px;min-width:64px;font-size:.8125rem;min-height:32px}Button[size^=large]{padding:8px 24px;min-width:112px;font-size:.9375rem;min-height:24px}Button[variant^=raised]{box-shadow:inset 0 0 0 99999px transparent,0 1px 5px 0 rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.12);color:rgba(0,0,0,.87);background-color:#E0E0E0}Button[variant^=raised]:hover{box-shadow:inset 0 0 0 99999px rgba(0,0,0,.2),0 1px 5px 0 rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.12)}Button[variant^=raised]:active{box-shadow:inset 0 0 0 99999px rgba(0,0,0,.3),0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}Button:not([variant^=raised]):before{content:'';display:block;top:0;left:0;position:absolute;transition:background-color 250ms cubic-bezier(.4,0,.2,1) 0s;height:100%;border-radius:2px;opacity:.15;width:100%;z-index:-1}Button:not([variant^=raised]):active:before{opacity:.2}Button:not([variant^=raised]):hover:before{background-color:#000}Button:not([variant^=raised])[color^=primary]:hover:before,Button[variant^=raised][color^=primary]{color:#fff;background-color:#2196F3}Button:not([variant^=raised])[color^=secondary]:hover:before,Button[variant^=raised][color^=secondary]{color:#fff;background-color:#E10050}Button:not([variant^=raised])[color^=primary]{color:#2196F3}Button:not([variant^=raised])[color^=secondary]{color:#E10050}Button[disabled]{background-color:rgba(0,0,0,.12)!important;color:rgba(0,0,0,.26)!important;pointer-events:none!important;box-shadow:none!important}
  </style>
</html>
